Write-Host "Provisioning hackathon participants..."
Write-Host "Assign role and license using group membership..."



$authToken = Get-AzAccessToken -ResourceUrl "https://graph.microsoft.com"
Write-Host ('Access Token acquired! Length: [{0}] chars - Expires on: [{1}]' -f $authToken.Token.Length, $authToken.ExpiresOn)

$graphApiVersion = "beta"
$userResource = "users"
$groupResource = "groups"

$domain = "@mngenvmcap168626.onmicrosoft.com"
# $roleAssignmentGroupId = "75a3feb5-db44-4442-9d71-82826c19c56f"


$uriUser = "https://graph.microsoft.com/$graphApiVersion/$($userResource)"
# $uriGroup = "https://graph.microsoft.com/$graphApiVersion/$($groupResource)/$($roleAssignmentGroupId)/members/$($ref)"

Invoke-RestMethod -Uri "https://graph.microsoft.com/$graphApiVersion/$($groupResource)" -Headers @{'Authorization'='Bearer '+ $authToken.token} -ContentType 'application/json' -Method Get


for ($i = 1; $i -le 25; $i++) {
    Write-Output ("Processing user: [{0}] ..." -f $i)
    $body = @{
        accountEnabled = $true
        displayName = "Hackathon Participant $($i)"
        mailNickname = "hackathon-$($i)"
        userPrincipalName = "hackathon-$($i)$domain"
        passwordProfile = @{
            forceChangePasswordNextSignIn = $true
            password = "AutoGeneratedPassword123!"
        }
        usageLocation = "NL"
    }

    $aadUser = Invoke-RestMethod -Uri $uriUser -Headers @{'Authorization'='Bearer '+ $authToken.token} -ContentType 'application/json' -Method Post -Body ($body | ConvertTo-Json)
    Write-Warning ("Created user: [{0}]" -f $body.userPrincipalName)
    <# Invoke-RestMethod -Uri "https://graph.microsoft.com/$graphApiVersion/users/$($aadUser.id)" -Headers @{'Authorization'='Bearer '+ $authToken.token} -ContentType 'application/json' -Method Get     
    $bodyUser = @{
        "@odata.id" = "https://graph.microsoft.com/$graphApiVersion/directoryObjects/$($aadUser.id)"
    } | ConvertTo-Json

    Invoke-RestMethod -Uri $uriGroup -Headers @{'Authorization'='Bearer '+ $authToken.token} -ContentType 'application/json' -Method Post -Body $bodyUser
    Write-Warning ("User added to the group [{0}] to grant license and role" -f  $roleAssignmentGroupId) #>

}

Write-Host "Done provisioning hackathon participants!"